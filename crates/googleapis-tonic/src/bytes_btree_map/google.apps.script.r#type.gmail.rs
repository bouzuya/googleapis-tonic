// This file is @generated by prost-build.
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct GmailAddOnManifest {
    #[prost(message, optional, tag = "14")]
    pub homepage_trigger: ::core::option::Option<super::HomepageExtensionPoint>,
    #[prost(message, repeated, tag = "3")]
    pub contextual_triggers: ::prost::alloc::vec::Vec<ContextualTrigger>,
    #[prost(message, repeated, tag = "4")]
    pub universal_actions: ::prost::alloc::vec::Vec<UniversalAction>,
    #[prost(message, optional, tag = "12")]
    pub compose_trigger: ::core::option::Option<ComposeTrigger>,
    #[prost(string, tag = "7")]
    pub authorization_check_function: ::prost::alloc::string::String,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct UniversalAction {
    #[prost(string, tag = "1")]
    pub text: ::prost::alloc::string::String,
    #[prost(oneof = "universal_action::ActionType", tags = "2, 3")]
    pub action_type: ::core::option::Option<universal_action::ActionType>,
}
/// Nested message and enum types in `UniversalAction`.
pub mod universal_action {
    #[allow(clippy::derive_partial_eq_without_eq)]
    #[derive(Clone, PartialEq, ::prost::Oneof)]
    pub enum ActionType {
        #[prost(string, tag = "2")]
        OpenLink(::prost::alloc::string::String),
        #[prost(string, tag = "3")]
        RunFunction(::prost::alloc::string::String),
    }
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ComposeTrigger {
    #[prost(message, repeated, tag = "5")]
    pub actions: ::prost::alloc::vec::Vec<super::MenuItemExtensionPoint>,
    #[prost(enumeration = "compose_trigger::DraftAccess", tag = "4")]
    pub draft_access: i32,
}
/// Nested message and enum types in `ComposeTrigger`.
pub mod compose_trigger {
    #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
    #[repr(i32)]
    pub enum DraftAccess {
        Unspecified = 0,
        None = 1,
        Metadata = 2,
    }
    impl DraftAccess {
        /// String value of the enum field names used in the ProtoBuf definition.
        ///
        /// The values are not transformed in any way and thus are considered stable
        /// (if the ProtoBuf definition does not change) and safe for programmatic use.
        pub fn as_str_name(&self) -> &'static str {
            match self {
                DraftAccess::Unspecified => "UNSPECIFIED",
                DraftAccess::None => "NONE",
                DraftAccess::Metadata => "METADATA",
            }
        }
        /// Creates an enum from field names used in the ProtoBuf definition.
        pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
            match value {
                "UNSPECIFIED" => Some(Self::Unspecified),
                "NONE" => Some(Self::None),
                "METADATA" => Some(Self::Metadata),
                _ => None,
            }
        }
    }
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ContextualTrigger {
    #[prost(string, tag = "4")]
    pub on_trigger_function: ::prost::alloc::string::String,
    #[prost(oneof = "contextual_trigger::Trigger", tags = "1")]
    pub trigger: ::core::option::Option<contextual_trigger::Trigger>,
}
/// Nested message and enum types in `ContextualTrigger`.
pub mod contextual_trigger {
    #[allow(clippy::derive_partial_eq_without_eq)]
    #[derive(Clone, Copy, PartialEq, ::prost::Oneof)]
    pub enum Trigger {
        #[prost(message, tag = "1")]
        Unconditional(super::UnconditionalTrigger),
    }
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct UnconditionalTrigger {}
