// This file is @generated by prost-build.
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Deployable {
#[prost(string, repeated, tag = "1")]
pub resource_uri: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Details {
#[prost(message, optional, tag = "1")]
pub deployment: ::core::option::Option<Deployment>,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Deployment {
#[prost(string, tag = "1")]
pub user_email: ::prost::alloc::string::String,
#[prost(message, optional, tag = "2")]
pub deploy_time: ::core::option::Option<::prost_types::Timestamp>,
#[prost(message, optional, tag = "3")]
pub undeploy_time: ::core::option::Option<::prost_types::Timestamp>,
#[prost(string, tag = "4")]
pub config: ::prost::alloc::string::String,
#[prost(string, tag = "5")]
pub address: ::prost::alloc::string::String,
#[prost(string, repeated, tag = "6")]
pub resource_uri: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
#[prost(enumeration = "deployment::Platform", tag = "7")]
pub platform: i32,
}
/// Nested message and enum types in `Deployment`.
pub mod deployment {
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum Platform {
Unspecified = 0,
Gke = 1,
Flex = 2,
Custom = 3,
}
impl Platform {
/// String value of the enum field names used in the ProtoBuf definition.
///
/// The values are not transformed in any way and thus are considered stable
/// (if the ProtoBuf definition does not change) and safe for programmatic use.
pub fn as_str_name(&self) -> &'static str {
match self {
Platform::Unspecified => "PLATFORM_UNSPECIFIED",
Platform::Gke => "GKE",
Platform::Flex => "FLEX",
Platform::Custom => "CUSTOM",
}
}
/// Creates an enum from field names used in the ProtoBuf definition.
pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
match value {
"PLATFORM_UNSPECIFIED" => Some(Self::Unspecified),
"GKE" => Some(Self::Gke),
"FLEX" => Some(Self::Flex),
"CUSTOM" => Some(Self::Custom),
_ => None,
}
}
}
}
