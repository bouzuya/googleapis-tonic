// This file is @generated by prost-build.
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct SecretEvent {
    #[prost(string, tag = "1")]
    pub name: ::prost::alloc::string::String,
    #[prost(enumeration = "secret_event::EventType", tag = "2")]
    pub r#type: i32,
    #[prost(string, tag = "3")]
    pub log_message: ::prost::alloc::string::String,
}
/// Nested message and enum types in `SecretEvent`.
pub mod secret_event {
    #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
    #[repr(i32)]
    pub enum EventType {
        Unspecified = 0,
        ExpiresIn30Days = 1,
        ExpiresIn7Days = 2,
        ExpiresIn1Day = 3,
        ExpiresIn6Hours = 4,
        ExpiresIn1Hour = 5,
        Expired = 6,
        TopicNotFound = 7,
        TopicPermissionDenied = 8,
    }
    impl EventType {
        /// String value of the enum field names used in the ProtoBuf definition.
        ///
        /// The values are not transformed in any way and thus are considered stable
        /// (if the ProtoBuf definition does not change) and safe for programmatic use.
        pub fn as_str_name(&self) -> &'static str {
            match self {
                EventType::Unspecified => "EVENT_TYPE_UNSPECIFIED",
                EventType::ExpiresIn30Days => "EXPIRES_IN_30_DAYS",
                EventType::ExpiresIn7Days => "EXPIRES_IN_7_DAYS",
                EventType::ExpiresIn1Day => "EXPIRES_IN_1_DAY",
                EventType::ExpiresIn6Hours => "EXPIRES_IN_6_HOURS",
                EventType::ExpiresIn1Hour => "EXPIRES_IN_1_HOUR",
                EventType::Expired => "EXPIRED",
                EventType::TopicNotFound => "TOPIC_NOT_FOUND",
                EventType::TopicPermissionDenied => "TOPIC_PERMISSION_DENIED",
            }
        }
        /// Creates an enum from field names used in the ProtoBuf definition.
        pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
            match value {
                "EVENT_TYPE_UNSPECIFIED" => Some(Self::Unspecified),
                "EXPIRES_IN_30_DAYS" => Some(Self::ExpiresIn30Days),
                "EXPIRES_IN_7_DAYS" => Some(Self::ExpiresIn7Days),
                "EXPIRES_IN_1_DAY" => Some(Self::ExpiresIn1Day),
                "EXPIRES_IN_6_HOURS" => Some(Self::ExpiresIn6Hours),
                "EXPIRES_IN_1_HOUR" => Some(Self::ExpiresIn1Hour),
                "EXPIRED" => Some(Self::Expired),
                "TOPIC_NOT_FOUND" => Some(Self::TopicNotFound),
                "TOPIC_PERMISSION_DENIED" => Some(Self::TopicPermissionDenied),
                _ => None,
            }
        }
    }
}
