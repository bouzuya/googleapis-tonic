// This file is @generated by prost-build.
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct MenuItemExtensionPoint {
    #[prost(string, tag = "1")]
    pub run_function: ::prost::alloc::string::String,
    #[prost(string, tag = "2")]
    pub label: ::prost::alloc::string::String,
    #[prost(string, tag = "3")]
    pub logo_url: ::prost::alloc::string::String,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct HomepageExtensionPoint {
    #[prost(string, tag = "1")]
    pub run_function: ::prost::alloc::string::String,
    #[prost(message, optional, tag = "2")]
    pub enabled: ::core::option::Option<bool>,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct UniversalActionExtensionPoint {
    #[prost(string, tag = "1")]
    pub label: ::prost::alloc::string::String,
    #[prost(oneof = "universal_action_extension_point::ActionType", tags = "2, 3")]
    pub action_type: ::core::option::Option<
        universal_action_extension_point::ActionType,
    >,
}
/// Nested message and enum types in `UniversalActionExtensionPoint`.
pub mod universal_action_extension_point {
    #[allow(clippy::derive_partial_eq_without_eq)]
    #[derive(Clone, PartialEq, ::prost::Oneof)]
    pub enum ActionType {
        #[prost(string, tag = "2")]
        OpenLink(::prost::alloc::string::String),
        #[prost(string, tag = "3")]
        RunFunction(::prost::alloc::string::String),
    }
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct AddOnWidgetSet {
    #[prost(enumeration = "add_on_widget_set::WidgetType", repeated, tag = "1")]
    pub used_widgets: ::prost::alloc::vec::Vec<i32>,
}
/// Nested message and enum types in `AddOnWidgetSet`.
pub mod add_on_widget_set {
    #[derive(
        Clone,
        Copy,
        Debug,
        PartialEq,
        Eq,
        Hash,
        PartialOrd,
        Ord,
        ::prost::Enumeration
    )]
    #[repr(i32)]
    pub enum WidgetType {
        Unspecified = 0,
        DatePicker = 1,
        StyledButtons = 2,
        PersistentForms = 3,
        FixedFooter = 4,
        UpdateSubjectAndRecipients = 5,
        GridWidget = 6,
        AddonComposeUiAction = 7,
    }
    impl WidgetType {
        /// String value of the enum field names used in the ProtoBuf definition.
        ///
        /// The values are not transformed in any way and thus are considered stable
        /// (if the ProtoBuf definition does not change) and safe for programmatic use.
        pub fn as_str_name(&self) -> &'static str {
            match self {
                WidgetType::Unspecified => "WIDGET_TYPE_UNSPECIFIED",
                WidgetType::DatePicker => "DATE_PICKER",
                WidgetType::StyledButtons => "STYLED_BUTTONS",
                WidgetType::PersistentForms => "PERSISTENT_FORMS",
                WidgetType::FixedFooter => "FIXED_FOOTER",
                WidgetType::UpdateSubjectAndRecipients => "UPDATE_SUBJECT_AND_RECIPIENTS",
                WidgetType::GridWidget => "GRID_WIDGET",
                WidgetType::AddonComposeUiAction => "ADDON_COMPOSE_UI_ACTION",
            }
        }
        /// Creates an enum from field names used in the ProtoBuf definition.
        pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
            match value {
                "WIDGET_TYPE_UNSPECIFIED" => Some(Self::Unspecified),
                "DATE_PICKER" => Some(Self::DatePicker),
                "STYLED_BUTTONS" => Some(Self::StyledButtons),
                "PERSISTENT_FORMS" => Some(Self::PersistentForms),
                "FIXED_FOOTER" => Some(Self::FixedFooter),
                "UPDATE_SUBJECT_AND_RECIPIENTS" => Some(Self::UpdateSubjectAndRecipients),
                "GRID_WIDGET" => Some(Self::GridWidget),
                "ADDON_COMPOSE_UI_ACTION" => Some(Self::AddonComposeUiAction),
                _ => None,
            }
        }
    }
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct CommonAddOnManifest {
    #[prost(string, tag = "1")]
    pub name: ::prost::alloc::string::String,
    #[prost(string, tag = "2")]
    pub logo_url: ::prost::alloc::string::String,
    #[prost(message, optional, tag = "3")]
    pub layout_properties: ::core::option::Option<LayoutProperties>,
    #[prost(message, optional, tag = "4")]
    pub add_on_widget_set: ::core::option::Option<AddOnWidgetSet>,
    #[prost(bool, tag = "5")]
    pub use_locale_from_app: bool,
    #[prost(message, optional, tag = "6")]
    pub homepage_trigger: ::core::option::Option<HomepageExtensionPoint>,
    #[prost(message, repeated, tag = "7")]
    pub universal_actions: ::prost::alloc::vec::Vec<UniversalActionExtensionPoint>,
    #[prost(message, optional, tag = "8")]
    pub open_link_url_prefixes: ::core::option::Option<::prost_types::ListValue>,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct LayoutProperties {
    #[prost(string, tag = "1")]
    pub primary_color: ::prost::alloc::string::String,
    #[prost(string, tag = "2")]
    pub secondary_color: ::prost::alloc::string::String,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct HttpOptions {
    #[prost(enumeration = "HttpAuthorizationHeader", tag = "1")]
    pub authorization_header: i32,
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum HttpAuthorizationHeader {
    Unspecified = 0,
    SystemIdToken = 1,
    UserIdToken = 2,
    None = 3,
}
impl HttpAuthorizationHeader {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            HttpAuthorizationHeader::Unspecified => {
                "HTTP_AUTHORIZATION_HEADER_UNSPECIFIED"
            }
            HttpAuthorizationHeader::SystemIdToken => "SYSTEM_ID_TOKEN",
            HttpAuthorizationHeader::UserIdToken => "USER_ID_TOKEN",
            HttpAuthorizationHeader::None => "NONE",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "HTTP_AUTHORIZATION_HEADER_UNSPECIFIED" => Some(Self::Unspecified),
            "SYSTEM_ID_TOKEN" => Some(Self::SystemIdToken),
            "USER_ID_TOKEN" => Some(Self::UserIdToken),
            "NONE" => Some(Self::None),
            _ => None,
        }
    }
}
