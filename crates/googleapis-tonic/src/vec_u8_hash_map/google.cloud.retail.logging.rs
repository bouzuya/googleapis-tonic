// This file is @generated by prost-build.
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ServiceContext {
#[prost(string, tag = "1")]
pub service: ::prost::alloc::string::String,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct HttpRequestContext {
#[prost(int32, tag = "1")]
pub response_status_code: i32,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct SourceLocation {
#[prost(string, tag = "1")]
pub function_name: ::prost::alloc::string::String,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ErrorContext {
#[prost(message, optional, tag = "1")]
pub http_request: ::core::option::Option<HttpRequestContext>,
#[prost(message, optional, tag = "2")]
pub report_location: ::core::option::Option<SourceLocation>,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ImportErrorContext {
#[prost(string, tag = "1")]
pub operation_name: ::prost::alloc::string::String,
#[prost(string, tag = "2")]
pub gcs_path: ::prost::alloc::string::String,
#[prost(string, tag = "3")]
pub line_number: ::prost::alloc::string::String,
#[prost(oneof = "import_error_context::LineContent", tags = "4, 5, 6")]
pub line_content: ::core::option::Option<import_error_context::LineContent>,
}
/// Nested message and enum types in `ImportErrorContext`.
pub mod import_error_context {
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Oneof)]
pub enum LineContent {
#[prost(string, tag = "4")]
CatalogItem(::prost::alloc::string::String),
#[prost(string, tag = "5")]
Product(::prost::alloc::string::String),
#[prost(string, tag = "6")]
UserEvent(::prost::alloc::string::String),
}
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ErrorLog {
#[prost(message, optional, tag = "1")]
pub service_context: ::core::option::Option<ServiceContext>,
#[prost(message, optional, tag = "2")]
pub context: ::core::option::Option<ErrorContext>,
#[prost(string, tag = "3")]
pub message: ::prost::alloc::string::String,
#[prost(message, optional, tag = "4")]
pub status: ::core::option::Option<super::super::super::rpc::Status>,
#[prost(message, optional, tag = "5")]
pub request_payload: ::core::option::Option<::prost_types::Struct>,
#[prost(message, optional, tag = "6")]
pub response_payload: ::core::option::Option<::prost_types::Struct>,
#[prost(message, optional, tag = "7")]
pub import_payload: ::core::option::Option<ImportErrorContext>,
}
